#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AplikacijaZaPoslovneKnjige
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GlavnaKnjiga")]
	public partial class GlavnaKnjigaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFirma(Firma instance);
    partial void UpdateFirma(Firma instance);
    partial void DeleteFirma(Firma instance);
    partial void InsertGrupaKonta(GrupaKonta instance);
    partial void UpdateGrupaKonta(GrupaKonta instance);
    partial void DeleteGrupaKonta(GrupaKonta instance);
    partial void InsertKonta(Konta instance);
    partial void UpdateKonta(Konta instance);
    partial void DeleteKonta(Konta instance);
    partial void InsertKontniPlan(KontniPlan instance);
    partial void UpdateKontniPlan(KontniPlan instance);
    partial void DeleteKontniPlan(KontniPlan instance);
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertNalog(Nalog instance);
    partial void UpdateNalog(Nalog instance);
    partial void DeleteNalog(Nalog instance);
    partial void InsertStavkaNaloga(StavkaNaloga instance);
    partial void UpdateStavkaNaloga(StavkaNaloga instance);
    partial void DeleteStavkaNaloga(StavkaNaloga instance);
    #endregion
		
		public GlavnaKnjigaDataContext() : 
				base(global::AplikacijaZaPoslovneKnjige.Properties.Settings.Default.GlavnaKnjigaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GlavnaKnjigaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlavnaKnjigaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlavnaKnjigaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GlavnaKnjigaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Firma> Firmas
		{
			get
			{
				return this.GetTable<Firma>();
			}
		}
		
		public System.Data.Linq.Table<GrupaKonta> GrupaKontas
		{
			get
			{
				return this.GetTable<GrupaKonta>();
			}
		}
		
		public System.Data.Linq.Table<Konta> Kontas
		{
			get
			{
				return this.GetTable<Konta>();
			}
		}
		
		public System.Data.Linq.Table<KontniPlan> KontniPlans
		{
			get
			{
				return this.GetTable<KontniPlan>();
			}
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Nalog> Nalogs
		{
			get
			{
				return this.GetTable<Nalog>();
			}
		}
		
		public System.Data.Linq.Table<StavkaNaloga> StavkaNalogas
		{
			get
			{
				return this.GetTable<StavkaNaloga>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Firma")]
	public partial class Firma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFirma;
		
		private string _Naziv;
		
		private string _Adresa;
		
		private string _Telefon;
		
		private string _UserNameUneo;
		
		private EntitySet<KontniPlan> _KontniPlans;
		
		private EntitySet<Nalog> _Nalogs;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFirmaChanging(int value);
    partial void OnIdFirmaChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnUserNameUneoChanging(string value);
    partial void OnUserNameUneoChanged();
    #endregion
		
		public Firma()
		{
			this._KontniPlans = new EntitySet<KontniPlan>(new Action<KontniPlan>(this.attach_KontniPlans), new Action<KontniPlan>(this.detach_KontniPlans));
			this._Nalogs = new EntitySet<Nalog>(new Action<Nalog>(this.attach_Nalogs), new Action<Nalog>(this.detach_Nalogs));
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFirma
		{
			get
			{
				return this._IdFirma;
			}
			set
			{
				if ((this._IdFirma != value))
				{
					this.OnIdFirmaChanging(value);
					this.SendPropertyChanging();
					this._IdFirma = value;
					this.SendPropertyChanged("IdFirma");
					this.OnIdFirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNameUneo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserNameUneo
		{
			get
			{
				return this._UserNameUneo;
			}
			set
			{
				if ((this._UserNameUneo != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameUneoChanging(value);
					this.SendPropertyChanging();
					this._UserNameUneo = value;
					this.SendPropertyChanged("UserNameUneo");
					this.OnUserNameUneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_KontniPlan", Storage="_KontniPlans", ThisKey="IdFirma", OtherKey="IdFirma")]
		public EntitySet<KontniPlan> KontniPlans
		{
			get
			{
				return this._KontniPlans;
			}
			set
			{
				this._KontniPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Nalog", Storage="_Nalogs", ThisKey="IdFirma", OtherKey="IdFirma")]
		public EntitySet<Nalog> Nalogs
		{
			get
			{
				return this._Nalogs;
			}
			set
			{
				this._Nalogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Firma", Storage="_Korisnik", ThisKey="UserNameUneo", OtherKey="UserName", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Firmas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Firmas.Add(this);
						this._UserNameUneo = value.UserName;
					}
					else
					{
						this._UserNameUneo = default(string);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KontniPlans(KontniPlan entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_KontniPlans(KontniPlan entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
		
		private void attach_Nalogs(Nalog entity)
		{
			this.SendPropertyChanging();
			entity.Firma = this;
		}
		
		private void detach_Nalogs(Nalog entity)
		{
			this.SendPropertyChanging();
			entity.Firma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GrupaKonta")]
	public partial class GrupaKonta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Grupa;
		
		private string _NazivGrupa;
		
		private string _Klasa;
		
		private EntitySet<Konta> _Kontas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrupaChanging(string value);
    partial void OnGrupaChanged();
    partial void OnNazivGrupaChanging(string value);
    partial void OnNazivGrupaChanged();
    partial void OnKlasaChanging(string value);
    partial void OnKlasaChanged();
    #endregion
		
		public GrupaKonta()
		{
			this._Kontas = new EntitySet<Konta>(new Action<Konta>(this.attach_Kontas), new Action<Konta>(this.detach_Kontas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grupa", DbType="NVarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Grupa
		{
			get
			{
				return this._Grupa;
			}
			set
			{
				if ((this._Grupa != value))
				{
					this.OnGrupaChanging(value);
					this.SendPropertyChanging();
					this._Grupa = value;
					this.SendPropertyChanged("Grupa");
					this.OnGrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivGrupa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivGrupa
		{
			get
			{
				return this._NazivGrupa;
			}
			set
			{
				if ((this._NazivGrupa != value))
				{
					this.OnNazivGrupaChanging(value);
					this.SendPropertyChanging();
					this._NazivGrupa = value;
					this.SendPropertyChanged("NazivGrupa");
					this.OnNazivGrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Klasa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Klasa
		{
			get
			{
				return this._Klasa;
			}
			set
			{
				if ((this._Klasa != value))
				{
					this.OnKlasaChanging(value);
					this.SendPropertyChanging();
					this._Klasa = value;
					this.SendPropertyChanged("Klasa");
					this.OnKlasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupaKonta_Konta", Storage="_Kontas", ThisKey="Grupa", OtherKey="Grupa")]
		public EntitySet<Konta> Kontas
		{
			get
			{
				return this._Kontas;
			}
			set
			{
				this._Kontas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kontas(Konta entity)
		{
			this.SendPropertyChanging();
			entity.GrupaKonta = this;
		}
		
		private void detach_Kontas(Konta entity)
		{
			this.SendPropertyChanging();
			entity.GrupaKonta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Konta")]
	public partial class Konta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SifraKonta;
		
		private string _OpisKonta;
		
		private string _Grupa;
		
		private EntitySet<KontniPlan> _KontniPlans;
		
		private EntityRef<GrupaKonta> _GrupaKonta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSifraKontaChanging(string value);
    partial void OnSifraKontaChanged();
    partial void OnOpisKontaChanging(string value);
    partial void OnOpisKontaChanged();
    partial void OnGrupaChanging(string value);
    partial void OnGrupaChanged();
    #endregion
		
		public Konta()
		{
			this._KontniPlans = new EntitySet<KontniPlan>(new Action<KontniPlan>(this.attach_KontniPlans), new Action<KontniPlan>(this.detach_KontniPlans));
			this._GrupaKonta = default(EntityRef<GrupaKonta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraKonta", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraKonta
		{
			get
			{
				return this._SifraKonta;
			}
			set
			{
				if ((this._SifraKonta != value))
				{
					this.OnSifraKontaChanging(value);
					this.SendPropertyChanging();
					this._SifraKonta = value;
					this.SendPropertyChanged("SifraKonta");
					this.OnSifraKontaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpisKonta", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OpisKonta
		{
			get
			{
				return this._OpisKonta;
			}
			set
			{
				if ((this._OpisKonta != value))
				{
					this.OnOpisKontaChanging(value);
					this.SendPropertyChanging();
					this._OpisKonta = value;
					this.SendPropertyChanged("OpisKonta");
					this.OnOpisKontaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grupa", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Grupa
		{
			get
			{
				return this._Grupa;
			}
			set
			{
				if ((this._Grupa != value))
				{
					if (this._GrupaKonta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrupaChanging(value);
					this.SendPropertyChanging();
					this._Grupa = value;
					this.SendPropertyChanged("Grupa");
					this.OnGrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Konta_KontniPlan", Storage="_KontniPlans", ThisKey="SifraKonta", OtherKey="SifraKonta")]
		public EntitySet<KontniPlan> KontniPlans
		{
			get
			{
				return this._KontniPlans;
			}
			set
			{
				this._KontniPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrupaKonta_Konta", Storage="_GrupaKonta", ThisKey="Grupa", OtherKey="Grupa", IsForeignKey=true)]
		public GrupaKonta GrupaKonta
		{
			get
			{
				return this._GrupaKonta.Entity;
			}
			set
			{
				GrupaKonta previousValue = this._GrupaKonta.Entity;
				if (((previousValue != value) 
							|| (this._GrupaKonta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GrupaKonta.Entity = null;
						previousValue.Kontas.Remove(this);
					}
					this._GrupaKonta.Entity = value;
					if ((value != null))
					{
						value.Kontas.Add(this);
						this._Grupa = value.Grupa;
					}
					else
					{
						this._Grupa = default(string);
					}
					this.SendPropertyChanged("GrupaKonta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KontniPlans(KontniPlan entity)
		{
			this.SendPropertyChanging();
			entity.Konta = this;
		}
		
		private void detach_KontniPlans(KontniPlan entity)
		{
			this.SendPropertyChanging();
			entity.Konta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KontniPlan")]
	public partial class KontniPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SifraKonta;
		
		private string _IdentifikacioniBroj;
		
		private string _Opis;
		
		private int _IdFirma;
		
		private EntityRef<Firma> _Firma;
		
		private EntityRef<Konta> _Konta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSifraKontaChanging(string value);
    partial void OnSifraKontaChanged();
    partial void OnIdentifikacioniBrojChanging(string value);
    partial void OnIdentifikacioniBrojChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnIdFirmaChanging(int value);
    partial void OnIdFirmaChanged();
    #endregion
		
		public KontniPlan()
		{
			this._Firma = default(EntityRef<Firma>);
			this._Konta = default(EntityRef<Konta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraKonta", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string SifraKonta
		{
			get
			{
				return this._SifraKonta;
			}
			set
			{
				if ((this._SifraKonta != value))
				{
					if (this._Konta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifraKontaChanging(value);
					this.SendPropertyChanging();
					this._SifraKonta = value;
					this.SendPropertyChanged("SifraKonta");
					this.OnSifraKontaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifikacioniBroj", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string IdentifikacioniBroj
		{
			get
			{
				return this._IdentifikacioniBroj;
			}
			set
			{
				if ((this._IdentifikacioniBroj != value))
				{
					this.OnIdentifikacioniBrojChanging(value);
					this.SendPropertyChanging();
					this._IdentifikacioniBroj = value;
					this.SendPropertyChanged("IdentifikacioniBroj");
					this.OnIdentifikacioniBrojChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirma", DbType="Int NOT NULL")]
		public int IdFirma
		{
			get
			{
				return this._IdFirma;
			}
			set
			{
				if ((this._IdFirma != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmaChanging(value);
					this.SendPropertyChanging();
					this._IdFirma = value;
					this.SendPropertyChanged("IdFirma");
					this.OnIdFirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_KontniPlan", Storage="_Firma", ThisKey="IdFirma", OtherKey="IdFirma", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.KontniPlans.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.KontniPlans.Add(this);
						this._IdFirma = value.IdFirma;
					}
					else
					{
						this._IdFirma = default(int);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Konta_KontniPlan", Storage="_Konta", ThisKey="SifraKonta", OtherKey="SifraKonta", IsForeignKey=true)]
		public Konta Konta
		{
			get
			{
				return this._Konta.Entity;
			}
			set
			{
				Konta previousValue = this._Konta.Entity;
				if (((previousValue != value) 
							|| (this._Konta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Konta.Entity = null;
						previousValue.KontniPlans.Remove(this);
					}
					this._Konta.Entity = value;
					if ((value != null))
					{
						value.KontniPlans.Add(this);
						this._SifraKonta = value.SifraKonta;
					}
					else
					{
						this._SifraKonta = default(string);
					}
					this.SendPropertyChanged("Konta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _PassWord;
		
		private EntitySet<Firma> _Firmas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    #endregion
		
		public Korisnik()
		{
			this._Firmas = new EntitySet<Firma>(new Action<Firma>(this.attach_Firmas), new Action<Firma>(this.detach_Firmas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Firma", Storage="_Firmas", ThisKey="UserName", OtherKey="UserNameUneo")]
		public EntitySet<Firma> Firmas
		{
			get
			{
				return this._Firmas;
			}
			set
			{
				this._Firmas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Firmas(Firma entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Firmas(Firma entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nalog")]
	public partial class Nalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNalog;
		
		private string _BrojNaloga;
		
		private int _VrstaDokumenta;
		
		private int _VrstaNaloga;
		
		private System.DateTime _DatumNaloga;
		
		private System.Nullable<int> _IdFirma;
		
		private EntitySet<StavkaNaloga> _StavkaNalogas;
		
		private EntityRef<Firma> _Firma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNalogChanging(int value);
    partial void OnIdNalogChanged();
    partial void OnBrojNalogaChanging(string value);
    partial void OnBrojNalogaChanged();
    partial void OnVrstaDokumentaChanging(int value);
    partial void OnVrstaDokumentaChanged();
    partial void OnVrstaNalogaChanging(int value);
    partial void OnVrstaNalogaChanged();
    partial void OnDatumNalogaChanging(System.DateTime value);
    partial void OnDatumNalogaChanged();
    partial void OnIdFirmaChanging(System.Nullable<int> value);
    partial void OnIdFirmaChanged();
    #endregion
		
		public Nalog()
		{
			this._StavkaNalogas = new EntitySet<StavkaNaloga>(new Action<StavkaNaloga>(this.attach_StavkaNalogas), new Action<StavkaNaloga>(this.detach_StavkaNalogas));
			this._Firma = default(EntityRef<Firma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNalog", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNalog
		{
			get
			{
				return this._IdNalog;
			}
			set
			{
				if ((this._IdNalog != value))
				{
					this.OnIdNalogChanging(value);
					this.SendPropertyChanging();
					this._IdNalog = value;
					this.SendPropertyChanged("IdNalog");
					this.OnIdNalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojNaloga", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string BrojNaloga
		{
			get
			{
				return this._BrojNaloga;
			}
			set
			{
				if ((this._BrojNaloga != value))
				{
					this.OnBrojNalogaChanging(value);
					this.SendPropertyChanging();
					this._BrojNaloga = value;
					this.SendPropertyChanged("BrojNaloga");
					this.OnBrojNalogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VrstaDokumenta", DbType="Int NOT NULL")]
		public int VrstaDokumenta
		{
			get
			{
				return this._VrstaDokumenta;
			}
			set
			{
				if ((this._VrstaDokumenta != value))
				{
					this.OnVrstaDokumentaChanging(value);
					this.SendPropertyChanging();
					this._VrstaDokumenta = value;
					this.SendPropertyChanged("VrstaDokumenta");
					this.OnVrstaDokumentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VrstaNaloga", DbType="Int NOT NULL")]
		public int VrstaNaloga
		{
			get
			{
				return this._VrstaNaloga;
			}
			set
			{
				if ((this._VrstaNaloga != value))
				{
					this.OnVrstaNalogaChanging(value);
					this.SendPropertyChanging();
					this._VrstaNaloga = value;
					this.SendPropertyChanged("VrstaNaloga");
					this.OnVrstaNalogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumNaloga", DbType="Date NOT NULL")]
		public System.DateTime DatumNaloga
		{
			get
			{
				return this._DatumNaloga;
			}
			set
			{
				if ((this._DatumNaloga != value))
				{
					this.OnDatumNalogaChanging(value);
					this.SendPropertyChanging();
					this._DatumNaloga = value;
					this.SendPropertyChanged("DatumNaloga");
					this.OnDatumNalogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFirma", DbType="Int")]
		public System.Nullable<int> IdFirma
		{
			get
			{
				return this._IdFirma;
			}
			set
			{
				if ((this._IdFirma != value))
				{
					if (this._Firma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFirmaChanging(value);
					this.SendPropertyChanging();
					this._IdFirma = value;
					this.SendPropertyChanged("IdFirma");
					this.OnIdFirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nalog_StavkaNaloga", Storage="_StavkaNalogas", ThisKey="IdNalog", OtherKey="IdNalog")]
		public EntitySet<StavkaNaloga> StavkaNalogas
		{
			get
			{
				return this._StavkaNalogas;
			}
			set
			{
				this._StavkaNalogas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Firma_Nalog", Storage="_Firma", ThisKey="IdFirma", OtherKey="IdFirma", IsForeignKey=true)]
		public Firma Firma
		{
			get
			{
				return this._Firma.Entity;
			}
			set
			{
				Firma previousValue = this._Firma.Entity;
				if (((previousValue != value) 
							|| (this._Firma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Firma.Entity = null;
						previousValue.Nalogs.Remove(this);
					}
					this._Firma.Entity = value;
					if ((value != null))
					{
						value.Nalogs.Add(this);
						this._IdFirma = value.IdFirma;
					}
					else
					{
						this._IdFirma = default(Nullable<int>);
					}
					this.SendPropertyChanged("Firma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaNalogas(StavkaNaloga entity)
		{
			this.SendPropertyChanging();
			entity.Nalog = this;
		}
		
		private void detach_StavkaNalogas(StavkaNaloga entity)
		{
			this.SendPropertyChanging();
			entity.Nalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaNaloga")]
	public partial class StavkaNaloga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdStavka;
		
		private System.Nullable<int> _IdNalog;
		
		private string _Konto;
		
		private string _Opis;
		
		private string _PozivNaBroj;
		
		private System.Nullable<System.DateTime> _DatumValute;
		
		private double _Duguje;
		
		private double _Potrazuje;
		
		private System.Nullable<int> _Komada;
		
		private EntityRef<Nalog> _Nalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStavkaChanging(int value);
    partial void OnIdStavkaChanged();
    partial void OnIdNalogChanging(System.Nullable<int> value);
    partial void OnIdNalogChanged();
    partial void OnKontoChanging(string value);
    partial void OnKontoChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnPozivNaBrojChanging(string value);
    partial void OnPozivNaBrojChanged();
    partial void OnDatumValuteChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumValuteChanged();
    partial void OnDugujeChanging(double value);
    partial void OnDugujeChanged();
    partial void OnPotrazujeChanging(double value);
    partial void OnPotrazujeChanged();
    partial void OnKomadaChanging(System.Nullable<int> value);
    partial void OnKomadaChanged();
    #endregion
		
		public StavkaNaloga()
		{
			this._Nalog = default(EntityRef<Nalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStavka", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdStavka
		{
			get
			{
				return this._IdStavka;
			}
			set
			{
				if ((this._IdStavka != value))
				{
					this.OnIdStavkaChanging(value);
					this.SendPropertyChanging();
					this._IdStavka = value;
					this.SendPropertyChanged("IdStavka");
					this.OnIdStavkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNalog", DbType="Int")]
		public System.Nullable<int> IdNalog
		{
			get
			{
				return this._IdNalog;
			}
			set
			{
				if ((this._IdNalog != value))
				{
					if (this._Nalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNalogChanging(value);
					this.SendPropertyChanging();
					this._IdNalog = value;
					this.SendPropertyChanged("IdNalog");
					this.OnIdNalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konto", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Konto
		{
			get
			{
				return this._Konto;
			}
			set
			{
				if ((this._Konto != value))
				{
					this.OnKontoChanging(value);
					this.SendPropertyChanging();
					this._Konto = value;
					this.SendPropertyChanged("Konto");
					this.OnKontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PozivNaBroj", DbType="NVarChar(25)")]
		public string PozivNaBroj
		{
			get
			{
				return this._PozivNaBroj;
			}
			set
			{
				if ((this._PozivNaBroj != value))
				{
					this.OnPozivNaBrojChanging(value);
					this.SendPropertyChanging();
					this._PozivNaBroj = value;
					this.SendPropertyChanged("PozivNaBroj");
					this.OnPozivNaBrojChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumValute", DbType="Date")]
		public System.Nullable<System.DateTime> DatumValute
		{
			get
			{
				return this._DatumValute;
			}
			set
			{
				if ((this._DatumValute != value))
				{
					this.OnDatumValuteChanging(value);
					this.SendPropertyChanging();
					this._DatumValute = value;
					this.SendPropertyChanged("DatumValute");
					this.OnDatumValuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duguje", DbType="Float NOT NULL")]
		public double Duguje
		{
			get
			{
				return this._Duguje;
			}
			set
			{
				if ((this._Duguje != value))
				{
					this.OnDugujeChanging(value);
					this.SendPropertyChanging();
					this._Duguje = value;
					this.SendPropertyChanged("Duguje");
					this.OnDugujeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Potrazuje", DbType="Float NOT NULL")]
		public double Potrazuje
		{
			get
			{
				return this._Potrazuje;
			}
			set
			{
				if ((this._Potrazuje != value))
				{
					this.OnPotrazujeChanging(value);
					this.SendPropertyChanging();
					this._Potrazuje = value;
					this.SendPropertyChanged("Potrazuje");
					this.OnPotrazujeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Komada", DbType="Int")]
		public System.Nullable<int> Komada
		{
			get
			{
				return this._Komada;
			}
			set
			{
				if ((this._Komada != value))
				{
					this.OnKomadaChanging(value);
					this.SendPropertyChanging();
					this._Komada = value;
					this.SendPropertyChanged("Komada");
					this.OnKomadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nalog_StavkaNaloga", Storage="_Nalog", ThisKey="IdNalog", OtherKey="IdNalog", IsForeignKey=true)]
		public Nalog Nalog
		{
			get
			{
				return this._Nalog.Entity;
			}
			set
			{
				Nalog previousValue = this._Nalog.Entity;
				if (((previousValue != value) 
							|| (this._Nalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nalog.Entity = null;
						previousValue.StavkaNalogas.Remove(this);
					}
					this._Nalog.Entity = value;
					if ((value != null))
					{
						value.StavkaNalogas.Add(this);
						this._IdNalog = value.IdNalog;
					}
					else
					{
						this._IdNalog = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
